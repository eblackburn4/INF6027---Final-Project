axis.title = element_text(size = 12)
)
ggplot(song_features_long_era, aes(x = Feature, y = Value, fill = Era)) +
geom_violin(
aes(y = ifelse(Era == "Pre-1991", Value, -Value)),  # Flip for half-violin
scale = "width",
trim = TRUE,
alpha = 0.7
) +
coord_flip() +  # Rotate the plot for horizontal violins
scale_fill_viridis_d(option = "D") +
labs(
title = "Distribution of Musical Features by Era (Half-Violin Plot)",
x = "Musical Features",
y = "Value",
fill = "Era"
) +
theme_minimal() +
theme(
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
plot.title = element_text(size = 16, face = "bold"),
legend.position = "right"
)
ggplot(song_features_long_era, aes(x = Feature, y = Value, fill = Era)) +
geom_boxplot(
position = position_dodge(width = 0.8),  # Separate boxes for each Era
alpha = 0.7,
outlier.shape = 16,  # Shape of outliers
outlier.size = 2     # Size of outliers
) +
scale_fill_viridis_d(option = "D") +  # Use viridis color palette
labs(
title = "Distribution of Musical Features by Era (Boxplot)",
x = "Musical Features",
y = "Value",
fill = "Era"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 16, face = "bold"),
axis.title = element_text(size = 12)
)
View(song_features_long_all)
View(song_features_long_era)
ggplot(song_features_long_era, aes(x = Feature, y = Value, fill = Era)) +
geom_density(
aes(y = ..scaled.. * ifelse(Era == "Pre-1991", 1, -1)),  # Scale and mirror densities
alpha = 0.7
) +
scale_fill_viridis_d(option = "D") +
labs(
title = "Distribution of Musical Features by Era (Mirrored Density Plot)",
x = "Value",
y = "Musical Features",
fill = "Era"
) +
theme_minimal() +
theme(
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
plot.title = element_text(size = 16, face = "bold"),
axis.title = element_text(size = 12),
legend.position = "right"
)
View(song_features_long_era)
ggplot(song_features_long_era, aes(x = Feature, y = Value, fill = Era)) +
geom_density(
aes(y = ..scaled.. * ifelse(Era == "Pre-1991", 1, -1)),  # Scale and mirror densities
alpha = 0.7
) +
scale_fill_viridis_d(option = "D") +
labs(
title = "Distribution of Musical Features by Era (Mirrored Density Plot)",
x = "Value",
y = "Musical Features",
fill = "Era"
) +
theme_minimal() +
theme(
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
plot.title = element_text(size = 16, face = "bold"),
axis.title = element_text(size = 12),
legend.position = "right"
)
View(song_features_long_era)
ggplot(song_features_long_era, aes(x = Feature, y = Value, fill = Era))
ggplot(song_features_long_era, aes(x = Feature, y = Value, fill = Era)) +
geom_density(
aes(y = ..scaled.. * ifelse(Era == "Pre-1991", 1, -1)),  # Scale and mirror densities
alpha = 0.7
)
ggplot(song_features_long_era, aes(x = Feature, y = Value, fill = Era)) +
geom_density(
aes(y = ifelse(Era == "Pre-1991", 1, -1)),  # Scale and mirror densities
alpha = 0.7
) +
scale_fill_viridis_d(option = "D") +
labs(
title = "Distribution of Musical Features by Era (Mirrored Density Plot)",
x = "Value",
y = "Musical Features",
fill = "Era"
) +
theme_minimal() +
theme(
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
plot.title = element_text(size = 16, face = "bold"),
axis.title = element_text(size = 12),
legend.position = "right"
)
ggplot(song_features_long_era, aes(x = Feature, y = Value, fill = Era)) +
geom_violin(
scale = "width", # Adjust violin width based on data density
trim = TRUE,     # Trim violins to data range
alpha = 0.7      # Add transparency to violins
) +
scale_fill_viridis_d(option = "D") +
facet_wrap(~ Feature, scales = "free_y") +  # Create one facet per feature
labs(
title = "Distribution of Musical Features by Era",
x = "Era",
y = "Value",
fill = "Era"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(size = 12, face = "bold"), # Facet labels
plot.title = element_text(size = 16, face = "bold"),
axis.title = element_text(size = 12)
)
pairwise_tests <- song_features_long_era %>%
group_by(Feature) %>%
do({
test_results <- compare_means(Value ~ Era, data = ., method = "t.test", paired = FALSE)
test_results
})
# Create the faceted boxplot
ggplot(song_features_long_era, aes(x = Era, y = Value, fill = Era)) +
geom_boxplot(
position = position_dodge(width = 0.8),
alpha = 0.7,
outlier.shape = 16,
outlier.size = 2
) +
stat_summary(
fun = mean,
geom = "point",
shape = 18,
size = 3,
color = "red",
position = position_dodge(width = 0.8)
) +
scale_fill_viridis_d(option = "D") +
facet_wrap(~ Feature, scales = "free_y") +  # Create one facet per feature
stat_pvalue_manual(
data = pairwise_tests,
label = "p.adj",  # Adjusted p-value from t-tests
hide.ns = TRUE,
bracket.size = 0.5,
step.increase = 0.1
) +
labs(
title = "Distribution of Musical Features by Era with Pairwise Significance",
x = "Era",
y = "Value",
fill = "Era"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(size = 12, face = "bold"),
plot.title = element_text(size = 16, face = "bold"),
axis.title = element_text(size = 12)
)
View(pairwise_tests)
?compare_means()
pairwise_tests <- long_data %>%
group_by(Feature) %>%
do({
test_results <- compare_means(Value ~ Era, data = ., method = "wilcox.test", paired = FALSE)
test_results
})
pairwise_tests <- song_features_long_era %>%
group_by(Feature) %>%
do({
test_results <- compare_means(Value ~ Era, data = ., method = "wilcox.test", paired = FALSE)
test_results
})
ggplot(song_features_long_era, aes(x = Feature, y = Value, fill = Era)) +
geom_boxplot(
position = position_dodge(width = 0.8),
alpha = 0.7,
outlier.shape = 16,
outlier.size = 2
) +
stat_summary(
fun = mean,
geom = "point",
shape = 18,
size = 3,
color = "red",
position = position_dodge(width = 0.8)
) +
scale_fill_viridis_d(option = "D") +
stat_pvalue_manual(
data = pairwise_tests,
label = "p.adj",  # Adjusted p-value from t-tests
hide.ns = TRUE,
bracket.size = 0.5,
step.increase = 0.1,
position = position_dodge(width = 0.8)
) +
labs(
title = "Distribution of Musical Features by Era with Pairwise Significance",
x = "Musical Features",
y = "Value",
fill = "Era"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 16, face = "bold"),
axis.title = element_text(size = 12)
)
pairwise_tests <- song_features_long_era %>%
group_by(Feature) %>%
do({
test_results <- compare_means(Value ~ Era, data = ., method = "wilcox.test", paired = FALSE)
test_results$y.position <- max(.$Value) + 0.2 * max(.$Value)
test_results
})
ggplot(song_features_long_era, aes(x = Feature, y = Value, fill = Era)) +
geom_boxplot(
position = position_dodge(width = 0.8),
alpha = 0.7,
outlier.shape = 16,
outlier.size = 2
) +
stat_summary(
fun = mean,
geom = "point",
shape = 18,
size = 3,
color = "red",
position = position_dodge(width = 0.8)
) +
scale_fill_viridis_d(option = "D") +
stat_pvalue_manual(
data = pairwise_tests,
label = "p.adj",  # Adjusted p-value from t-tests
hide.ns = TRUE,
y.position = "y.position",
bracket.size = 0.5,
step.increase = 0.1,
position = position_dodge(width = 0.8)
) +
labs(
title = "Distribution of Musical Features by Era with Pairwise Significance",
x = "Musical Features",
y = "Value",
fill = "Era"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 16, face = "bold"),
axis.title = element_text(size = 12)
)
ggplot(song_features_long_era, aes(x = Feature, y = Value, fill = Era)) +
geom_boxplot(
position = position_dodge(width = 0.8),
alpha = 0.7,
outlier.shape = 16,
outlier.size = 2
) +
stat_summary(
fun = mean,
geom = "point",
shape = 18,
size = 3,
color = "red",
position = position_dodge(width = 0.8)
) +
scale_fill_viridis_d(option = "D") +
labs(
title = "Distribution of Musical Features by Era with Pairwise Significance",
x = "Musical Features",
y = "Value",
fill = "Era"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 16, face = "bold"),
axis.title = element_text(size = 12)
)
ggplot(song_features_long_era, aes(x = Feature, y = Value, fill = Era)) +
geom_boxplot(
position = position_dodge(width = 0.8),
alpha = 0.7,
outlier.shape = 16,
outlier.size = 2
) +
stat_summary(
fun = median,
geom = "point",
shape = 18,
size = 3,
color = "red",
position = position_dodge(width = 0.8)
) +
scale_fill_viridis_d(option = "D") +
labs(
title = "Distribution of Musical Features by Era with Pairwise Significance",
x = "Musical Features",
y = "Value",
fill = "Era"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 16, face = "bold"),
axis.title = element_text(size = 12)
)
ggplot(song_features_long_era, aes(x = Feature, y = Value, fill = Era)) +
geom_boxplot(
position = position_dodge(width = 0.8),
alpha = 0.7,
outlier.shape = 16,
outlier.size = 0
) +
stat_summary(
fun = median,
geom = "point",
shape = 18,
size = 3,
color = "red",
position = position_dodge(width = 0.8)
) +
scale_fill_viridis_d(option = "D") +
labs(
title = "Distribution of Musical Features by Era with Pairwise Significance",
x = "Musical Features",
y = "Value",
fill = "Era"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 16, face = "bold"),
axis.title = element_text(size = 12)
)
ggplot(song_features_long_era, aes(x = Feature, y = Value, fill = Era)) +
geom_boxplot(
position = position_dodge(width = 0.8),
alpha = 0.7,
outlier.shape = 16,
outlier.size = 0
) +
stat_summary(
fun = median,
geom = "point",
shape = 18,
size = 3,
color = "red",
position = position_dodge(width = 0.8)
) +
scale_fill_viridis_d(option = "D") +
labs(
title = "Distribution of Musical Features by Era with Pairwise Significance",
x = "Musical Features",
y = "Value",
fill = "Era"
) +
theme_ipsum_rc() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 16, face = "bold"),
axis.title = element_text(size = 12)
)
ggplot(song_features_long_era, aes(x = Feature, y = Value, fill = Era)) +
geom_boxplot(
position = position_dodge(width = 0.8),
alpha = 0.7,
outlier.shape = 16,
outlier.size = 0
) +
stat_summary(
fun = median,
geom = "point",
shape = 18,
size = 3,
color = "red",
position = position_dodge(width = 0.8)
) +
scale_fill_viridis_d(option = "D") +
labs(
title = "Distribution of Musical Features by Era with Pairwise Significance",
x = "Musical Features",
y = "Value",
fill = "Era"
) +
theme_ipsum_rc(grid = 'XY') +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 16, face = "bold"),
axis.title = element_text(size = 12)
)
ggplot(song_features_long_era, aes(x = Feature, y = Value, fill = Era)) +
geom_boxplot(
position = position_dodge(width = 0.8),
alpha = 0.7,
outlier.shape = 16,
outlier.size = 0
) +
stat_summary(
fun = median,
geom = "point",
shape = 18,
size = 3,
color = "black",
position = position_dodge(width = 0.8)
) +
scale_fill_viridis_d(option = "D") +
labs(
title = "Distribution of Musical Features by Era with Pairwise Significance",
x = "Musical Features",
y = "Value",
fill = "Era"
) +
theme_ipsum_rc(grid = 'XY') +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 16, face = "bold"),
axis.title = element_text(size = 12)
)
View(pairwise_tests)
pairwise_tests <- song_features_long_era %>%
group_by(Feature) %>%
do({
test_results <- compare_medians(Value ~ Era, data = ., method = "wilcox.test", paired = FALSE)
test_results$y.position <- max(.$Value) + 0.2 * max(.$Value)
test_results
})
install.packages('rstatix')
pairwise_tests <- song_features_long_era%>%
group_by(Feature) %>%
wilcox_test(Value ~ Era, paired = FALSE) %>%  # Perform Wilcoxon test
add_significance() %>%  # Add significance labels
effect_sizes <- song_features_long_era %>%
group_by(Feature) %>%
wilcox_effsize(Value ~ Era)
pairwise_tests <- song_features_long_era %>%
group_by(Feature) %>%
wilcox_test(Value ~ Era, paired = FALSE) %>%  # Perform Wilcoxon test
add_significance() %>%  # Add significance labels
effect_sizes <- song_features_long_era %>%
group_by(Feature) %>%
wilcox_effsize(Value ~ Era)
pairwise_tests <- song_features_long_era |>
group_by(Feature) %>%
wilcox_test(Value ~ Era, paired = FALSE) %>%  # Perform Wilcoxon test
add_significance() %>%  # Add significance labels
effect_sizes <- song_features_long_era %>%
group_by(Feature) %>%
wilcox_effsize(Value ~ Era)
ptions(scipen = 6, digits = 5)
options(scipen = 6, digits = 5)
library(tidyverse)
library(hrbrthemes)
library(GGally)
library(ggfortify)
library(tidytext)
library(textdata)
library(scico)
library(ggpubr)
library(ggdist)
library(rstatix)
pairwise_tests <- song_features_long_era |>
group_by(Feature) |>
wilcox_test(Value ~ Era, paired = FALSE) |>  # Perform Wilcoxon test
add_significance() |>  # Add significance labels
effect_sizes <- song_features_long_era |>
group_by(Feature) |>
wilcox_effsize(Value ~ Era)
effect_sizes <- song_features_long_era |>
group_by(Feature) |>
wilcox_effsize(Value ~ Era)
pairwise_tests <- song_features_long_era |>
group_by(Feature) |>
wilcox_test(Value ~ Era, paired = FALSE) |>  # Perform Wilcoxon test
add_significance() |>  # Add significance labels
effect_sizes <- song_features_long_era |>
group_by(Feature) |>
wilcox_effsize(Value ~ Era)
View(pairwise_tests)
effect_sizes <- song_features_long_era |>
group_by(Feature)
effect_sizes <- song_features_long_era |>
group_by(Feature) |>
wilcox_effsize(Value ~ Era)
install.packages('coin')
library(coin)
effect_sizes <- song_features_long_era |>
group_by(Feature) |>
wilcox_effsize(Value ~ Era)
View(effect_sizes)
