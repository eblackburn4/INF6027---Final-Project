plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10)
) +
theme_ipsum_rc()
ggplot(segment_all, aes(x = release_year, y = avg_prop)) +
geom_point(color = "gray", size = 2, alpha = 0.7) +
geom_line(aes(y = fitted_values), size = 1) +
geom_vline(xintercept = breakpoints, linetype = "dashed")  +
annotate("text", x=1990, y=0.45, label="1991", angle=90, size = 3) +
labs(
title = "Two-Breakpoint Model",
x = "Release Year",
y = "Average Value"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10)
) +
theme_ipsum_rc()
ggplot(segment_all, aes(x = release_year, y = avg_prop)) +
geom_point(color = "gray", size = 2, alpha = 0.7) +
geom_line(aes(y = fitted_values), size = 1) +
geom_vline(xintercept = breakpoints, linetype = "dashed")  +
annotate("text", x=1990, y=0.45, label="1991", angle=90, size = 4, color = 'grey30') +
labs(
title = "Two-Breakpoint Model",
x = "Release Year",
y = "Average Value"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10)
) +
theme_ipsum_rc()
ggplot(segment_all, aes(x = release_year, y = avg_prop)) +
geom_point(color = "gray", size = 2, alpha = 0.7) +
geom_line(aes(y = fitted_values), size = 1) +
geom_vline(xintercept = breakpoints, linetype = "dashed")  +
annotate("text", x=1989, y=ylim(), label="1991", angle=90, size = 4, color = 'grey30') +
labs(
title = "Two-Breakpoint Model",
x = "Release Year",
y = "Average Value"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10)
) +
theme_ipsum_rc()
ggplot(segment_all, aes(x = release_year, y = avg_prop)) +
geom_point(color = "gray", size = 2, alpha = 0.7) +
geom_line(aes(y = fitted_values), size = 1) +
geom_vline(xintercept = breakpoints, linetype = "dashed")  +
annotate("text", x=1989, y=0.44, label="1991", angle=90, size = 4, color = 'grey30') +
labs(
title = "Two-Breakpoint Model",
x = "Release Year",
y = "Average Value"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10)
) +
theme_ipsum_rc()
ggplot(segment_all, aes(x = release_year, y = avg_prop)) +
geom_point(color = "gray", size = 2, alpha = 0.7) +
geom_line(aes(y = fitted_values), size = 1) +
geom_vline(xintercept = breakpoints, linetype = "dashed")  +
annotate("text", x=1989, y=0.425, label="1991", angle=90, size = 4, color = 'grey30') +
labs(
title = "Two-Breakpoint Model",
x = "Release Year",
y = "Average Value"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10)
) +
theme_ipsum_rc()
segment_feature_func <- function(feature_name) {
segment_feature <- song_features_long_all |>
filter(feature == feature_name) |>
select(!feature)
segtest_feature <- selgmented(segment_feature$yearly_avg, Kmax=10, type='aic', plot.ic=TRUE, check.dslope = FALSE)
plot(segtest_feature, res=TRUE, col=2, lwd=3)
lm_feature <- lm(avg_prop ~ release_year, data = segment_feature)
seg_mod_feature <- segmented(lm_feature, seg.Z = ~release_year, npsi = segtest_feature$selection.psi$npsi)
summary_feature <- summary(seg_mod_feature)
breakpoints_feat <- round(seg_mod_feature$psi[, "Est."],0)
segment_feature$fitted_values <- fitted(seg_mod_feature)
#plot the fitted segmented model
ggplot(segment_feature, aes(x = release_year, y = avg_prop)) +
geom_point(color = "gray", size = 2, alpha = 0.7) +
geom_line(aes(y = fitted_values), size = 1) +
geom_vline(xintercept = breakpoints, linetype = "dashed")  +
annotate("text", x=1989, y=0.425, label="1991", angle=90, size = 3.6, color = 'grey30') +
labs(
title = "SEGMENTS!!!!",
x = "Release Year",
y = "Average Value"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10)
) +
theme_ipsum_rc()
}
segment_feature_func('valence')
segment_feature_func <- function(feature_name) {
segment_feature <- song_features_long_all |>
filter(feature == feature_name) |>
select(!feature)
segtest_feature <- selgmented(segment_feature$yearly_avg, Kmax=10, type='aic', plot.ic=TRUE, check.dslope = FALSE)
plot(segtest_feature, res=TRUE, col=2, lwd=3)
lm_feature <- lm(avg_prop ~ release_year, data = segment_feature)
seg_mod_feature <- segmented(lm_feature, seg.Z = ~release_year, npsi = segtest_feature$selection.psi$npsi)
summary_feature <- summary(seg_mod_feature)
breakpoints_feat <- round(seg_mod_feature$psi[, "Est."],0)
segment_feature$fitted_values <- fitted(seg_mod_feature)
#plot the fitted segmented model
ggplot(segment_feature, aes(x = release_year, y = yearly_avg)) +
geom_point(color = "gray", size = 2, alpha = 0.7) +
geom_line(aes(y = fitted_values), size = 1) +
geom_vline(xintercept = breakpoints, linetype = "dashed")  +
annotate("text", x=1989, y=0.425, label="1991", angle=90, size = 3.6, color = 'grey30') +
labs(
title = "SEGMENTS!!!!",
x = "Release Year",
y = "Average Value"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10)
) +
theme_ipsum_rc()
}
segment_feature_func('valence')
segment_feature_func <- function(feature_name) {
segment_feature <- song_features_long_all |>
filter(feature == feature_name) |>
select(!feature)
segtest_feature <- selgmented(segment_feature$yearly_avg, Kmax=10, type='aic', plot.ic=TRUE, check.dslope = FALSE)
plot(segtest_feature, res=TRUE, col=2, lwd=3)
lm_feature <- lm(yearly_avg ~ release_year, data = segment_feature)
seg_mod_feature <- segmented(lm_feature, seg.Z = ~release_year, npsi = segtest_feature$selection.psi$npsi)
summary_feature <- summary(seg_mod_feature)
breakpoints_feat <- round(seg_mod_feature$psi[, "Est."],0)
segment_feature$fitted_values <- fitted(seg_mod_feature)
#plot the fitted segmented model
ggplot(segment_feature, aes(x = release_year, y = yearly_avg)) +
geom_point(color = "gray", size = 2, alpha = 0.7) +
geom_line(aes(y = fitted_values), size = 1) +
geom_vline(xintercept = breakpoints, linetype = "dashed")  +
annotate("text", x=1989, y=0.425, label="1991", angle=90, size = 3.6, color = 'grey30') +
labs(
title = "SEGMENTS!!!!",
x = "Release Year",
y = "Average Value"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10)
) +
theme_ipsum_rc()
}
segment_feature_func('valence')
segment_feature <- song_features_long_all |>
filter(feature == feature_name) |>
select(!feature)
segment_feature <- song_features_long_all |>
filter(feature == 'valence') |>
select(!feature)
segtest_feature <- selgmented(segment_feature$yearly_avg, Kmax=10, type='aic', plot.ic=TRUE, check.dslope = FALSE)
plot(segtest_feature, res=TRUE, col=2, lwd=3)
lm_feature <- lm(yearly_avg ~ release_year, data = segment_feature)
seg_mod_feature <- segmented(lm_feature, seg.Z = ~release_year, npsi = segtest_feature$selection.psi$npsi)
lm_feature <- lm(yearly_avg ~ release_year, data = segment_feature)
seg_mod_feature <- segmented(lm_feature, seg.Z = ~release_year, npsi = 2)
lm_feature <- lm(yearly_avg ~ release_year, data = segment_feature)
seg_mod_feature <- segmented(lm_feature, seg.Z = ~release_year, npsi = 4)
lm_feature <- lm(yearly_avg ~ release_year, data = segment_feature)
seg_mod_feature <- segmented(lm_feature, seg.Z = ~release_year, npsi = 3)
segment_feature <- song_features_long_all |>
filter(feature == 'loudness') |>
select(!feature)
segtest_feature <- selgmented(segment_feature$yearly_avg, Kmax=10, type='aic', plot.ic=TRUE, check.dslope = FALSE)
plot(segtest_feature, res=TRUE, col=2, lwd=3)
lm_feature <- lm(yearly_avg ~ release_year, data = segment_feature)
seg_mod_feature <- segmented(lm_feature, seg.Z = ~release_year, npsi = 3)
segment_feature <- song_features_long_all |>
filter(feature == 'valence') |>
select(!feature)
segtest_feature <- selgmented(segment_feature$yearly_avg, Kmax=10, type='aic', plot.ic=TRUE, check.dslope = FALSE)
plot(segtest_feature, res=TRUE, col=2, lwd=3)
lm_feature <- lm(yearly_avg ~ release_year, data = segment_feature)
seg_mod_feature <- segmented(lm_feature, seg.Z = ~release_year, npsi = 3)
segment_feature <- song_features_long_all |>
filter(feature == 'valence') |>
select(!feature)
segtest_feature <- selgmented(segment_feature$yearly_avg, Kmax=10, type='aic', plot.ic=TRUE, check.dslope = FALSE)
plot(segtest_feature, res=TRUE, col=2, lwd=3)
lm_feature <- lm(yearly_avg ~ release_year, data = segment_feature)
seg_mod_feature <- segmented(lm_feature, seg.Z = ~release_year, npsi = 2)
segment_feature_func <- function(feature_name) {
segment_feature <- song_features_long_all |>
filter(feature == 'valence') |>
select(!feature)
segtest_feature <- selgmented(segment_feature$yearly_avg, Kmax=10, type='aic', plot.ic=TRUE, check.dslope = FALSE)
plot(segtest_feature, res=TRUE, col=2, lwd=3)
lm_feature <- lm(yearly_avg ~ release_year, data = segment_feature)
seg_mod_feature <- segmented(lm_feature, seg.Z = ~release_year, npsi = 2)
summary_feature <- summary(seg_mod_feature)
breakpoints_feat <- round(seg_mod_feature$psi[, "Est."],0)
segment_feature$fitted_values <- fitted(seg_mod_feature)
#plot the fitted segmented model
ggplot(segment_feature, aes(x = release_year, y = yearly_avg)) +
geom_point(color = "gray", size = 2, alpha = 0.7) +
geom_line(aes(y = fitted_values), size = 1) +
geom_vline(xintercept = breakpoints, linetype = "dashed")  +
annotate("text", x=1989, y=0.425, label="1991", angle=90, size = 3.6, color = 'grey30') +
labs(
title = "SEGMENTS!!!!",
x = "Release Year",
y = "Average Value"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10)
) +
theme_ipsum_rc()
}
segment_feature_func <- function(feature_name) {
segment_feature <- song_features_long_all |>
filter(feature == feature_name) |>
select(!feature)
segtest_feature <- selgmented(segment_feature$yearly_avg, Kmax=10, type='aic', plot.ic=TRUE, check.dslope = FALSE)
plot(segtest_feature, res=TRUE, col=2, lwd=3)
lm_feature <- lm(yearly_avg ~ release_year, data = segment_feature)
seg_mod_feature <- segmented(lm_feature, seg.Z = ~release_year, npsi = 2)
summary_feature <- summary(seg_mod_feature)
breakpoints_feat <- round(seg_mod_feature$psi[, "Est."],0)
segment_feature$fitted_values <- fitted(seg_mod_feature)
#plot the fitted segmented model
ggplot(segment_feature, aes(x = release_year, y = yearly_avg)) +
geom_point(color = "gray", size = 2, alpha = 0.7) +
geom_line(aes(y = fitted_values), size = 1) +
geom_vline(xintercept = breakpoints, linetype = "dashed")  +
annotate("text", x=1989, y=0.425, label="1991", angle=90, size = 3.6, color = 'grey30') +
labs(
title = "SEGMENTS!!!!",
x = "Release Year",
y = "Average Value"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10)
) +
theme_ipsum_rc()
}
segment_feature_func('valence')
segment_feature_func <- function(feature_name) {
segment_feature <- song_features_long_all |>
filter(feature == feature_name) |>
select(!feature)
segtest_feature <- selgmented(segment_feature$yearly_avg, Kmax=10, type='aic', plot.ic=TRUE, check.dslope = FALSE)
plot(segtest_feature, res=TRUE, col=2, lwd=3)
lm_feature <- lm(yearly_avg ~ release_year, data = segment_feature)
seg_mod_feature <- segmented(lm_feature, seg.Z = ~release_year, npsi = 1)
summary_feature <- summary(seg_mod_feature)
breakpoints_feat <- round(seg_mod_feature$psi[, "Est."],0)
segment_feature$fitted_values <- fitted(seg_mod_feature)
#plot the fitted segmented model
ggplot(segment_feature, aes(x = release_year, y = yearly_avg)) +
geom_point(color = "gray", size = 2, alpha = 0.7) +
geom_line(aes(y = fitted_values), size = 1) +
geom_vline(xintercept = breakpoints, linetype = "dashed")  +
annotate("text", x=1989, y=0.425, label="1991", angle=90, size = 3.6, color = 'grey30') +
labs(
title = "SEGMENTS!!!!",
x = "Release Year",
y = "Average Value"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10)
) +
theme_ipsum_rc()
}
segment_feature_func('valence')
segment_feature_func('loudness')
segment_feature_func <- function(feature_name) {
segment_feature <- song_features_long_all |>
filter(feature == feature_name) |>
select(!feature)
segtest_feature <- selgmented(segment_feature$yearly_avg, Kmax=2, type='aic', plot.ic=TRUE, check.dslope = FALSE)
plot(segtest_feature, res=TRUE, col=2, lwd=3)
lm_feature <- lm(yearly_avg ~ release_year, data = segment_feature)
seg_mod_feature <- segmented(lm_feature, seg.Z = ~release_year, npsi = segtest_feature$selection.psi$npsi)
summary_feature <- summary(seg_mod_feature)
breakpoints_feat <- round(seg_mod_feature$psi[, "Est."],0)
segment_feature$fitted_values <- fitted(seg_mod_feature)
#plot the fitted segmented model
ggplot(segment_feature, aes(x = release_year, y = yearly_avg)) +
geom_point(color = "gray", size = 2, alpha = 0.7) +
geom_line(aes(y = fitted_values), size = 1) +
geom_vline(xintercept = breakpoints, linetype = "dashed")  +
annotate("text", x=1989, y=0.425, label="1991", angle=90, size = 3.6, color = 'grey30') +
labs(
title = "SEGMENTS!!!!",
x = "Release Year",
y = "Average Value"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10)
) +
theme_ipsum_rc()
}
segment_feature_func('loudness')
segment_feature_func('danceability')
segment_feature_func <- function(feature_name) {
segment_feature <- song_features_long_all |>
filter(feature == feature_name) |>
select(!feature)
segtest_feature <- selgmented(segment_feature$yearly_avg, Kmax=2, type='aic', plot.ic=TRUE, check.dslope = FALSE)
plot(segtest_feature, res=TRUE, col=2, lwd=3)
lm_feature <- lm(yearly_avg ~ release_year, data = segment_feature)
seg_mod_feature <- segmented(lm_feature, seg.Z = ~release_year, npsi = segtest_feature$selection.psi$npsi)
summary_feature <- summary(seg_mod_feature)
breakpoints_feat <- round(seg_mod_feature$psi[, "Est."],0)
segment_feature$fitted_values <- fitted(seg_mod_feature)
#plot the fitted segmented model
ggplot(segment_feature, aes(x = release_year, y = yearly_avg)) +
geom_point(color = "gray", size = 2, alpha = 0.7) +
geom_line(aes(y = fitted_values), size = 1) +
geom_vline(xintercept = breakpoints_feat, linetype = "dashed")  +
annotate("text", x=1989, y=0.425, label="1991", angle=90, size = 3.6, color = 'grey30') +
labs(
title = "SEGMENTS!!!!",
x = "Release Year",
y = "Average Value"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10)
) +
theme_ipsum_rc()
}
segment_feature_func('danceability')
segment_feature_func <- function(feature_name) {
segment_feature <- song_features_long_all |>
filter(feature == feature_name) |>
select(!feature)
segtest_feature <- selgmented(segment_feature$yearly_avg, Kmax=2, type='aic', plot.ic=TRUE, check.dslope = FALSE)
plot(segtest_feature, res=TRUE, col=2, lwd=3)
lm_feature <- lm(yearly_avg ~ release_year, data = segment_feature)
seg_mod_feature <- segmented(lm_feature, seg.Z = ~release_year, npsi = segtest_feature$selection.psi$npsi)
summary_feature <- summary(seg_mod_feature)
breakpoints_feat <- round(seg_mod_feature$psi[, "Est."],1)
segment_feature$fitted_values <- fitted(seg_mod_feature)
#plot the fitted segmented model
ggplot(segment_feature, aes(x = release_year, y = yearly_avg)) +
geom_point(color = "gray", size = 2, alpha = 0.7) +
geom_line(aes(y = fitted_values), size = 1) +
geom_vline(xintercept = breakpoints_feat, linetype = "dashed")  +
annotate("text", x=1989, y=0.425, label="1991", angle=90, size = 3.6, color = 'grey30') +
labs(
title = "SEGMENTS!!!!",
x = "Release Year",
y = "Average Value"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10)
) +
theme_ipsum_rc()
}
segment_feature_func('danceability')
View(summary)
segment_feature_func <- function(feature_name) {
segment_feature <- song_features_long_all |>
filter(feature == feature_name) |>
select(!feature)
segtest_feature <- selgmented(segment_feature$yearly_avg, Kmax=2, type='aic', plot.ic=TRUE, check.dslope = FALSE)
plot(segtest_feature, res=TRUE, col=2, lwd=3)
lm_feature <- lm(yearly_avg ~ release_year, data = segment_feature)
seg_mod_feature <- segmented(lm_feature, seg.Z = ~release_year, npsi = segtest_feature$selection.psi$npsi)
summary_feature <- summary(seg_mod_feature)
breakpoints_feat <- round(seg_mod_feature$psi[, "Est."],1)
segment_feature$fitted_values <- fitted(seg_mod_feature)
#plot the fitted segmented model
ggplot(segment_feature, aes(x = release_year, y = yearly_avg)) +
geom_point(color = "gray", size = 2, alpha = 0.7) +
geom_line(aes(y = fitted_values), size = 1) +
geom_vline(xintercept = breakpoints_feat, linetype = "dashed")  +
annotate("text", x=1989, y=0.425, label="1991", angle=90, size = 3.6, color = 'grey30') +
labs(
title = "SEGMENTS!!!!",
x = "Release Year",
y = "Average Value"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10)
) +
theme_ipsum_rc()
}
segment_feature_func('danceability')
segment_feature_func <- function(feature_name) {
segment_feature <- song_features_long_all |>
filter(feature == feature_name) |>
select(!feature)
segtest_feature <- selgmented(segment_feature$yearly_avg, Kmax=5, type='aic', plot.ic=TRUE, check.dslope = FALSE)
plot(segtest_feature, res=TRUE, col=2, lwd=3)
lm_feature <- lm(yearly_avg ~ release_year, data = segment_feature)
seg_mod_feature <- segmented(lm_feature, seg.Z = ~release_year, npsi = segtest_feature$selection.psi$npsi)
summary_feature <- summary(seg_mod_feature)
breakpoints_feat <- round(seg_mod_feature$psi[, "Est."],1)
segment_feature$fitted_values <- fitted(seg_mod_feature)
#plot the fitted segmented model
ggplot(segment_feature, aes(x = release_year, y = yearly_avg)) +
geom_point(color = "gray", size = 2, alpha = 0.7) +
geom_line(aes(y = fitted_values), size = 1) +
geom_vline(xintercept = breakpoints_feat, linetype = "dashed")  +
annotate("text", x=1989, y=0.425, label="1991", angle=90, size = 3.6, color = 'grey30') +
labs(
title = "SEGMENTS!!!!",
x = "Release Year",
y = "Average Value"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10)
) +
theme_ipsum_rc()
}
segment_feature_func('danceability')
segment_feature_func <- function(feature_name) {
segment_feature <- song_features_long_all |>
filter(feature == feature_name) |>
select(!feature)
segtest_feature <- selgmented(segment_feature$yearly_avg,
Kmax=5,
type='aic',
plot.ic=TRUE,
check.dslope = FALSE,
psi = seq(0.2, 0.8, by = 0.1))
plot(segtest_feature, res=TRUE, col=2, lwd=3)
lm_feature <- lm(yearly_avg ~ release_year, data = segment_feature)
seg_mod_feature <- segmented(lm_feature, seg.Z = ~release_year, npsi = segtest_feature$selection.psi$npsi)
summary_feature <- summary(seg_mod_feature)
breakpoints_feat <- round(seg_mod_feature$psi[, "Est."],1)
segment_feature$fitted_values <- fitted(seg_mod_feature)
#plot the fitted segmented model
ggplot(segment_feature, aes(x = release_year, y = yearly_avg)) +
geom_point(color = "gray", size = 2, alpha = 0.7) +
geom_line(aes(y = fitted_values), size = 1) +
geom_vline(xintercept = breakpoints_feat, linetype = "dashed")  +
annotate("text", x=1989, y=0.425, label="1991", angle=90, size = 3.6, color = 'grey30') +
labs(
title = "SEGMENTS!!!!",
x = "Release Year",
y = "Average Value"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10)
) +
theme_ipsum_rc()
}
segment_feature_func('danceability')
segment_feature_func('danceability')
summary_feature <- summary(seg_mod_feature)
View(summary_feature)
summary_feature
library(patchwork)
setwd("~/RStuff")
